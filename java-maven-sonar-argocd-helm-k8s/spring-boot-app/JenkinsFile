pipeline{
    agent any
    environment{
        DOCKER_TAG = getDockerTag()
        SONAR_URL = "http://13.201.52.196:9000/"
    }
    stages{
        stage("code checkout"){
            steps{
                git branch: 'main', credentialsId: 'github', url: 'https://github.com/devops-ismailattar/Jenkins--cicd-pipeline.git'
            }
        }

        stage("mvn build"){
            steps{
                sh """
                cd java-maven-sonar-argocd-helm-k8s/spring-boot-app
                mvn clean package
                """
            }
        }

        stage("static code analysis"){
            steps{
                withCredentials([string(credentialsId: 'sonarqube', variable: 'SONAR_AUTH_TOKEN')]) {
                    sh """
                    cd  java-maven-sonar-argocd-helm-k8s/spring-boot-app
                    mvn sonar:sonar -Dsonar.login=$SONAR_AUTH_TOKEN -Dsonar.host.url=${SONAR_URL}
                    """
                }
            }
        }

        stage("docker build image"){
            steps{
                sh """
                cd java-maven-sonar-argocd-helm-k8s/spring-boot-app
                docker build -t attarismail/springboot:${DOCKER_TAG} .
                """
            }
        }

        stage("docker push image"){
            steps{
                withCredentials([string(credentialsId: 'docker-cred\'', variable: 'dockerHubPassword')]) {
                    sh """
                    docker login -u attarismail -p ${dockerHubPassword}
                    docker push attarismail/springboot:${DOCKER_TAG}
                    """
                }
            }
        }
    }
}

def getDockerTag() {
    def tag = sh(script: 'git rev-parse HEAD', returnStdout: true).trim()
    return tag
}
