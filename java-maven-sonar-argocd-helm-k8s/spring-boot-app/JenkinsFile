pipeline{
    agent any
    environment{
        DOCKER_TAG = getDockerTag()
    }
    stages{
        stage("commit check"){
            steps{
                git branch: 'main', credentialsId: 'github', url: 'https://github.com/devops-ismailattar/Jenkins--cicd-pipeline.git'
            }
        }
        
        stage("maven build"){
            steps{
                sh """
                cd java-maven-sonar-argocd-helm-k8s/spring-boot-app
                mvn clean package
                """
            }
        }
        
        stage("docker build image"){
            // builing image with docker
            steps{
                sh "cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && docker build -t attarismail/springboot:${DOCKER_TAG} ."
            }
        }
        
        stage("docker image push"){
            steps{
                withCredentials([string(credentialsId: 'docker-cred', variable: 'dockerHubPassword')]) {
                   sh """
                   docker login -u attarismail -p ${dockerHubPassword}
                   docker push attarismail/springboot:${DOCKER_TAG}
                   """
                }
            }
        }
        
        stage("deployment files"){
            steps{
                sh """
                sed -i 's|^ *image:.*|  image: ${DOCKER_IMAGE}:${DOCKER_TAG}|' \
                java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
                """
            }
        }
    }
}

def getDockerTag() {
    def tag = sh(script: 'git rev-parse HEAD', returnStdout: true).trim()
    return tag
}
