pipeline{
    agent any
    environment {
        BUID_NUMBER = getDockerTag()
    }
    stages{
        stage("build image"){
            steps{
                sh """
                cd java-maven-sonar-argocd-helm-k8s/spring-boot-app
                mvn clean package
                """
            }
        }

        stage("sonat scan"){
            environment{
                SONAR_URL = "http://13.201.52.196:9000/"
            }
            steps{
                withCredentials([string(credentialsId: 'sonarqube', variable: 'SONAR_AUTH_TOKEN')]) {
                    sh 'cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && mvn sonar:sonar -Dsonar.login=$SONAR_AUTH_TOKEN -Dsonar.host.url=${SONAR_URL}'
                }
            }
        }

        stage("docker build"){
            steps{
                sh """
                cd java-maven-sonar-argocd-helm-k8s/spring-boot-app
                docker build -t attarismail/springboot:${BUID_NUMBER} .
                """

            }
        }

        stage("push image to docker hub"){
            steps{
                withCredentials([string(credentialsId: 'docker-cred', variable: 'dockerHubPassword')]) {
                    sh """
                    docker login -u attarismail -p ${dockerHubPassword}
                    docker push attarismail/springboot:${BUID_NUMBER}
                    """
                }

            }
        }

        stage("update deployment files"){
            steps{
                sh "sed -i 's|image: attarismail/springboot:.*|image: attarismail/springboot:${BUID_NUMBER}|' java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml"
            }
        }

        stage("push code to github"){
            environment{
                GIT_REPO_NAME = "Jenkins--cicd-pipeline"
                GIT_USER_NAME = "devops-ismailattar"
            }
            steps{
                withCredentials([string(credentialsId: 'github-creds', variable: 'GITHUB_TOKEN')]) {
                    sh """
                    git config user.email "ismail.xyz@gmail.com"
                    git config user.name "ismail attar"
                    git add java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
                    git commit -m "Update deployment image to version ${BUID_NUMBER}"
                    git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:main
                    """
                }
            }
        }
    }
}

def getDockerTag() {
    def tag = sh(script: 'git rev-parse HEAD', returnStdout: true).trim()
    return tag
}
